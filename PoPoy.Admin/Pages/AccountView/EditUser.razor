@page "/updateUser/{Id}"
@inject IAuthService Authservice
@inject NavigationManager NavigationManager
@inject Radzen.DialogService dialogService;

@if (ShowErrors)
{
    <span class="alert alert-danger">@Message</span>
}
else
{

        <div class="card-body ml-3 col-12">
        <RadzenTabs>
            <Tabs>
                <RadzenTabsItem Text="Thông tin chung">
                    <EditForm Model="User" OnValidSubmit="UpdateUser">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <div class="text-field col-lg-12 mb-4">
                            <label for="lastname">Họ</label>
                            <InputText id="lastname" class="form-control" @bind-Value="User.UserName"></InputText>
                            <ValidationMessage For="()=> User.UserName"></ValidationMessage>
                        </div>
                        <div class="text-field col-lg-12 mb-4">
                            <label for="firstname">Tên</label>
                            <InputText id="firstname" class="form-control" @bind-Value="User.FirstName"></InputText>
                            <ValidationMessage For="()=> User.FirstName"></ValidationMessage>
                        </div>
                        <div class="text-field col-lg-12 mb-4">
                            <label for="dob">Ngày tháng sinh</label>
                            <InputDate id="dob" class="form-control" @bind-Value="User.Dob"></InputDate>
                            <ValidationMessage For="()=> User.Dob"></ValidationMessage>
                        </div>
                        <div class="text-field col-lg-12 mb-4">
                            <label for="email">Email</label>
                            <InputText id="email" class="form-control" @bind-Value="User.Email"></InputText>
                            <ValidationMessage For="()=> User.Email"></ValidationMessage>
                        </div>
                        <div class="text-field col-lg-12 mb-4">
                            <label for="phonenumber">Số điện thoại</label>
                            <InputText id="phonenumber" class="form-control" @bind-Value="User.PhoneNumber"></InputText>
                            <ValidationMessage For="()=> User.PhoneNumber"></ValidationMessage>
                        </div>
                        <div class="text-field col-lg-12 mb-4">
                            <label for="username">Username</label>
                            <InputText id="username" class="form-control" @bind-Value="User.UserName"></InputText>
                            <ValidationMessage For="()=> User.UserName"></ValidationMessage>
                        </div>

                        <div class="text-field col-lg-12 mb-4">
                            <label for="password">Mật khẩu mới</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="User.Password"></InputText>
                            <ValidationMessage For="()=> User.Password"></ValidationMessage>
                        </div>
                        <div class="row">
                            <div class="col-md-12 text-end">
                                <RadzenButton Icon="close" Click="@((args) => dialogService.Close(false))" Variant="Variant.Flat" ButtonStyle="ButtonStyle.Light" Text="Cancel" Style="width: 120px" Class="me-1" />
                                <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Icon="add_circle" Text="Lưu lại" Style="width: 120px" />
                            </div>
                        </div>
                    </EditForm>
                </RadzenTabsItem>

                <RadzenTabsItem Text="Vai trò">
                    <RadzenCard>
                       <AssignRole Id="@Id"></AssignRole>
                    </RadzenCard>
                </RadzenTabsItem>


            </Tabs>
        </RadzenTabs>
    </div>

}


@code {
    [Parameter]
    public string Id { get; set; }
    public UserVM User = new UserVM();
    public bool ShowErrors = false;
    public string Message;

    [Inject] private IToastService toastService { get; set; }
    protected async override Task OnInitializedAsync()
    {
        User = await Authservice.GetUserById(Guid.Parse(Id));
    }

    private async Task UpdateUser()
    {
        var result = await Authservice.UpdateUser(User);
        if (result)
        {
            NavigationManager.NavigateTo("/listUser");
            toastService.ShowSuccess("Cập nhật thành công");

        }
        else
        {

            toastService.ShowError("Cập nhật không thành công");
        }
    }

}
