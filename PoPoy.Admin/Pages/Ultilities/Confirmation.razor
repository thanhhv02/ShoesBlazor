@if (ShowConfirmation)
{
    <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title" style="color:darkblue" id="exampleModalLabel">@ConfirmationTitle</h3>
                    <RadzenButton Icon="close" Variant="Variant.Text" ButtonStyle="ButtonStyle.Dark" type="button" class="close" data-dismiss="modal" aria-label="Close"
                            Click="args => OnConfirmationChange(false)">
                    </RadzenButton>
                </div>
                <div class="modal-body">
                    @ConfirmationMessage
                </div>
                <div class="modal-footer">
                    <RadzenButton Text="Cancel" Icon="close" ButtonStyle="ButtonStyle.Light" data-dismiss="modal"
                            Click="() => OnConfirmationChange(false)">
                        
                    </RadzenButton>
                    <RadzenButton Text="Delete" Icon="delete_forever" Variant="Variant.Flat" ButtonStyle="ButtonStyle.Danger"
                            Click="() => OnConfirmationChange(true)">
                    </RadzenButton>
                </div>
            </div>
        </div>
    </div>
}

@code {
    protected bool ShowConfirmation { get; set; }

    [Parameter]
    public string ConfirmationTitle { get; set; } = "Xác nhận xóa người dùng";

    [Parameter]
    public string ConfirmationMessage { get; set; } = "Bạn chắc chắn muốn xóa người dùng?";

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    public void Show()
    {
        ShowConfirmation = true;
        StateHasChanged();
    }

    protected async Task OnConfirmationChange(bool value)
    {
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(value);
    }
}