@page "/order/{orderId}"
@using PoPoy.Admin.Extensions
@using PoPoy.Admin.Services.BroadCastService
@using PoPoy.Shared.Common
@using PoPoy.Shared.Entities.OrderDto
@attribute [Authorize(Roles = RoleName.Admin + "," + RoleName.Staff)]


@inject IOrderService OrderService
@inject IProductService ProductService
@*<div class="row">
        <h2 class="ml-2 mt-4 mb-3 col-11" style="color:darkblue">Chi tiết đơn hàng</h2>
        <a href="/listOrder" class="btn btn-danger col-1 mt-4" style="height:40px;width:40px"><i class="oi oi-arrow-left"></i></a>
    </div>


    <div class="row mt-4 ml-3">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Mã đơn hàng
                    </th>
                    <th>
                        Tên hàng
                    </th>
                    <th>
                        Kích cỡ
                    </th>
                    <th>
                        Số lượng
                    </th>
                    <th>
                        Giá 1 đơn vị
                    </th>
                    <th>
                        Tổng đơn hàng
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var items in OrderDetails)
                {
                    <tr>
                        <td>@items.OrderId</td>
                        <td>@Products.FirstOrDefault(x => x.Id == items.ProductId).Title</td>
                        <td>@items.Size</td>
                        <td>@items.Quantity</td>
                        <td>@items.Price</td>
                        <td>@items.TotalPrice</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>*@
@if (order != null)
{
    <div class="card">

        <div class="card-body pt-3">
            <h2 class="mt-4 ml-3 mb-3 card-title" style="color:#012970">Chi tiết đơn hàng <b>#@orderId</b></h2>
            <RadzenSteps ShowStepsButtons="false">

                <Steps>
                    <RadzenStepsItem Selected="order.OrderStatus == OrderStatus.Processing" Text="Xác nhận thông tin & Bàn giao Shipper ">
                        <hr />
                        @*<h6 style="color:#012970"><b>Thông tin người đặt</b></h6>*@
                        <div class="row mt-1">
                            <div class="text-field col-lg-6 mb-4">
                                <div class="row">
                                    <div class="col-6">
                                        <label for="name">Mã đơn hàng</label>
                                        <input disabled class="form-control" value="@(order.Id)" />
                                    </div>
                                    <div class="col-6">
                                        <RadzenButton Style="height:53px" class="ml-3" Icon="ios_share" ButtonStyle="ButtonStyle.Primary" Variant="Variant.Outlined"
                                                      Click="()=>SendChat(order, order.UserId)" Text="Gửi tin nhắn"></RadzenButton>
                                    </div>
                                </div>
                            </div>
                            <div class="text-field col-lg-6 mb-4">
                                <label for="name">Tên người đặt</label>
                                <input disabled class="form-control" value="@(order.User.LastName + " " + order.User.FirstName)" />
                            </div>
                            <div class="text-field col-lg-6 mb-4">
                                <label for="name">Địa chỉ</label>
                                <input disabled class="form-control" value="@(order.Address.Street.ToString() + ", " + order.Address.Ward.ToString() + ", " + order.Address.District.ToString() + ", " + order.Address.City.ToString())" />
                            </div>
                            <div class="text-field col-lg-6 mb-4">
                                <label for="name">Ngày đặt</label>
                                <input disabled class="form-control" value="@(order.OrderDate)" />
                            </div>
                            <div class="text-field col-lg-6 mb-4">
                                <label for="name">Phương thức thanh toán</label>
                                <input disabled class="form-control" value="@(order.PaymentMode)" />
                            </div>
                            <div class="text-field col-lg-6 mb-4">
                                <label for="name">Tổng tiền</label>
                                <input disabled class="form-control" value="@(order.TotalPrice)" />
                            </div>

                        </div>
                        <hr />
                        <h6 style="color:#012970"><b>Thông tin sản phẩm</b></h6>

                        <RadzenDataGrid Responsive AllowFiltering="true" AllowColumnResize="true"
                                        FilterMode="Radzen.FilterMode.Simple" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Center" AllowPaging="true" AllowSorting="true" Data="@OrderDetails" TItem="OrderDetails" ColumnWidth="300px"
                                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                        LogicalFilterOperator="LogicalFilterOperator.Or"
                                        SelectionMode="DataGridSelectionMode.Single" Context="OrderDetails">
                            <Columns>
                                <RadzenDataGridColumn TItem="OrderDetails" Context="product" Filterable="false" Sortable="true" Title="Tên sản phẩm">
                                    <Template>
                                        @product.Product.Title
                                    </Template>
                                </RadzenDataGridColumn>
                                <RadzenDataGridColumn TItem="OrderDetails" Filterable="false" Sortable="true" Property="OrderDetails.SizeName" Width="30" Title="Kích cỡ" CssClass="MyInputClass" />
                                <RadzenDataGridColumn TItem="OrderDetails" Filterable="false" Sortable="true" Property="OrderDetails.ColorName" Width="30" Title="Màu" CssClass="MyInputClass" />
                                <RadzenDataGridColumn TItem="OrderDetails" Filterable="false" Sortable="true" Property="OrderDetails.Quantity" Width="30" Title="Số lượng" CssClass="MyInputClass" />
                                <RadzenDataGridColumn TItem="OrderDetails" Filterable="false" Sortable="true" Property="OrderDetails.Price" Title="Giá 1 đơn vị" CssClass="MyInputClass" />
                                <RadzenDataGridColumn TItem="OrderDetails" Filterable="false" Sortable="true" Property="OrderDetails.TotalPrice" Title="Tổng giá thành" CssClass="MyInputClass" />

                            </Columns>
                        </RadzenDataGrid>
                        <hr />
                        <h6 style="color:#012970"><b>Bàn giao cho người vận chuyển</b></h6>
                        <EditForm Model="AssignShipperModel" OnValidSubmit="AssignShipper">
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Chọn người vận chuyển</RadzenText>
                            <RadzenListBox LoadData="OnLoadDataShipper" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.Contains" @bind-Value=@shipperId
                                           Data=@shippers TextProperty="Name" Change=@(args => OnLoadData(args)) ValueProperty="Id" Style="height:200px" Class="w-100" />

                            <div class="row mt-3 @(order.OrderStatus == OrderStatus.Processing ? "" : "d-none")">
                                <div class="col-md-12 text-end">
                                    <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Icon="handshake" Text="Bàn giao" />
                                </div>
                            </div>
                        </EditForm>
                    </RadzenStepsItem>

                    <RadzenStepsItem Selected="order.OrderStatus == OrderStatus.Confirmed" Disabled="order.OrderStatus != OrderStatus.Confirmed" Text="Đơn hàng đã được tiếp nhận">
                        <div class="d-flex justify-content-center align-items-center">
                            <div>

                                <h2 style="color:#012970">Đã bàn giao cho <b>@(order.Shipper != null ? order.Shipper.FirstName + " "+  order.Shipper.LastName : "")</b> !</h2>
                            </div>

                            <img src="/images/choxacnhan.gif" width="300" />
                        </div>
                    </RadzenStepsItem>

                    <RadzenStepsItem Selected="order.OrderStatus == OrderStatus.Delivering" Disabled="order.OrderStatus != OrderStatus.Delivering" Text="Đang trong quá trình vận chuyển">
                        <div class="d-flex justify-content-center align-items-center">
                            <div>

                                <h2 style="color:#012970">Shipper <b>@(order.Shipper != null ? order.Shipper.FirstName + " " + order.Shipper.LastName : "") </b> đang giao hàng !</h2>
                            </div>

                            <img src="/images/danggiaohang.gif" width="300" />
                        </div>
                    </RadzenStepsItem>

                    <RadzenStepsItem Selected="order.OrderStatus == OrderStatus.Delivered ||order.OrderStatus == OrderStatus.Cancelled" Disabled="order.OrderStatus != OrderStatus.Delivered && order.OrderStatus != OrderStatus.Cancelled " Text="Hoàn tất đơn hàng">
                        <div class="d-flex justify-content-center align-items-center">
                            @if (order.OrderStatus == OrderStatus.Delivered)
                            {
                                <div>
                                    <h2 style="color:#012970">Đơn hàng được <b>@(order.Shipper != null ? order.Shipper?.FirstName + " " + order.Shipper?.LastName : "") </b> giao thành công !</h2>
                                </div>
                                <img src="/images/danhanhang.png" width="100" />

                            }
                            else if (order.OrderStatus == OrderStatus.Cancelled)
                            {
                                <div>
                                    <h2 style="color:#012970">Đơn hàng giao không thành công !</h2>
                                </div>
                                <img src="/images/giaothatbai.png" width="100" />

                            }
                        </div>

                    </RadzenStepsItem>
                </Steps>
            </RadzenSteps>
        </div>

    </div>
}
else
{
   <Loading></Loading>
}
@code {
    [Parameter]
    public string orderId { get; set; }
    [Inject] private IToastService toastService { get; set; }
    [Inject] private IBroadCastService broadCastService { get; set; }

    private List<OrderDetails> OrderDetails { get; set; } = new List<OrderDetails>();
    private Order order;
    private AssignShipperDto AssignShipperModel = new();
    string shipperId = "";
    List<SelectItem> shippers = new List<SelectItem>();



    protected override async Task OnInitializedAsync()
    {
        await GetOrderDetails();
        shippers = await OrderService.GetShippers();

        shipperId = order.ShipperId.ToString();

        StateHasChanged();
    }

    private async Task GetOrderDetails()
    {
        order = await OrderService.GetOrderWithUser(orderId);
        OrderDetails = order.OrderDetails;
    }



    async Task OnLoadDataShipper(LoadDataArgs args)
    {
        shippers = await OrderService.GetShippers();

        var list = shippers;
        if (!string.IsNullOrEmpty(args.Filter))
        {
            list = shippers.Where(c => c.Name.ConvertToUnSign().Contains(args.Filter.ConvertToUnSign())).ToList();
        }
        shippers = list;
        await InvokeAsync(StateHasChanged);
    }
    private async Task AssignShipper()
    {
        if (!string.IsNullOrEmpty(shipperId))
        {
            AssignShipperModel.OrderId = orderId;
            AssignShipperModel.ShipperId = Guid.Parse(shipperId);
        }

        var result = await OrderService.AssignShipper(AssignShipperModel);
        if (result)
        {
            toastService.ShowSuccess("Bàn giao cho shipper thành công ");
            await GetOrderDetails();
            // thông báo cho shippẻ
            var noti = new NotiSendConfig("Đơn hàng ship mới", "Bạn được bàn giao một đơn hàng mới", "/shipper");
            await broadCastService.SendNotiUserId(noti, Guid.Parse(shipperId));
            StateHasChanged();
        }
        else
        {
            toastService.ShowError("Bàn giao cho shipper thất bại ");
        }
    }

    void OnLoadData(object value)
    {

        if (!string.IsNullOrEmpty(shipperId))
        {
            AssignShipperModel.OrderId = orderId;
            AssignShipperModel.ShipperId = Guid.Parse(shipperId);
        }



        InvokeAsync(StateHasChanged);
    }
    private async void SendChat(Order order, Guid userId)
    {
        await broadCastService.SendInfoOrderModelToUserId(order, userId);
        toastService.ShowSuccess("Gửi thông tin thành công");
    }


}
