@page "/products"
@page "/{categoryUrl}"
@inject IProductService _productSvc;
@inject IConfiguration _config;
<PageInfos Title="Sản phẩm"></PageInfos>
<div class="bg-main">
    <div class="container">
        <div class="box">
            <div class="breadcumb">
                <a href="./index.html">home</a>
                <span><i class='bx bxs-chevrons-right'></i></span>
                <a href="./products.html">all products</a>
            </div>
        </div>
        <div class="box">
            <div class="row">
                <div class="col-3" id="filter-col">
                    <div class="box filter-toggle-box">
                        <button class="btn-flat btn-hover" id="filter-close">close</button>
                    </div>
                    <CategoryFilter></CategoryFilter>
                </div>
                <div class="col-9">
                    <div class="box filter-toggle-box">
                        <button class="btn-flat btn-hover" id="filter-toggle">filter</button>
                    </div>
                    <div class="box">
                        <div class="row" id="products">
                            @if (ProductList.Count == 0)
                            {
                                <LoadingScreen></LoadingScreen>
                            }
                            else
                            {
                                foreach (var item in ProductList)
                                {

                                    <div class="col-4 col-md-6 col-sm-12">
                                        <div class="product-card">
                                            <div class="product-card-img">

                                                @try
                                                {
                                                    @if (item.ProductImages.Any())
                                                    {
                                                        <img src="@item.ProductImages.FirstOrDefault().ImagePath" alt="">
                                                        <img src="@item.ProductImages.Skip(1).FirstOrDefault().ImagePath" alt="">
                                                    }
                                                    else
                                                    {
                                                        <img src="@_config["BackendApiUrl"]/uploads/no-photo-available.png" alt="">
                                                    }



                                                }
                                                catch { }

                                            </div>
                                            <div class="product-card-info">
                                                <div class="product-btn">
                                                    <a href="/product-detail/@item.Id" class="btn-flat btn-hover btn-shop-now">shop now</a>
                                                    @*<button class="btn-flat btn-hover btn-cart-add">
                                                            <i class="bx bxs-cart-add"></i>
                                                        </button>*@
                                                    <button class="btn-flat btn-hover btn-cart-add">
                                                        <i class="bx bxs-heart"></i>
                                                    </button>
                                                </div>
                                                <div class="product-card-name">
                                                    @item.Title
                                                </div>
                                                <div class="product-card-price">
                                                    <span><del>@item.OriginalPrice</del></span>
                                                    <span class="curr-price">@item.Price</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                }

                            }
                        </div>
                    </div>
                    <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public string? CategoryUrl { get; set; } = null;
    public List<Product> ProductList { get; set; } = new List<Product>();
    public MetaData MetaData { get; set; } = new MetaData();
    private ProductParameters _productParameters = new ProductParameters();
    protected override async Task OnInitializedAsync()
    {
        await GetProducts();
    }
    private async Task SelectedPage(int page)
    {
        _productParameters.PageNumber = page;
        await GetProducts();
    }
    private async Task GetProducts()
    {
        var pagingResponse = await _productSvc.GetAll(_productParameters);
        ProductList = pagingResponse.Items;
        MetaData = pagingResponse.MetaData;
    }
}
