@page "/product-detail/{id:int}"
@inject IProductService _productSvc;
@inject ILocalStorageService LocalStorage
@inject IToastService _toastSvc;
@inject ICartService _cartSvc;
@inject IConfiguration _config;
@inject HttpClient _httpClient;

<PageInfos Title="@product.Title"></PageInfos>
<div class="bg-main">
    <div class="container">
        <div class="box">
            <div class="breadcumb">
                <a href="./index.html">home</a>
                <span><i class="bx bxs-chevrons-right"></i></span>
                <a href="./products.html">all products</a>
                <span><i class="bx bxs-chevrons-right"></i></span>
                <a href="./product-detail.html">JBL Tune 750TNC</a>
            </div>
        </div>
        <div class="row product-row">
            <div class="col-5">
                @try
                {
                    @if (product.ProductImages.Any())
                    {
                        <div class="product-img" id="product-img">
                            <img src="@product.ProductImages.FirstOrDefault().ImagePath" alt="">
                        </div>
                        <div class="box">
                            <div class="product-img-list">
                                @foreach (var item in product.ProductImages)
                                {
                                    <div class="product-img-item">
                                        <img src="@item.ImagePath" alt="">
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <img src="@_config["BackendApiUrl"]/uploads/no-photo-available.png" alt="">
                    }
                }
                catch { }


            </div>
            <div class="col-7">
                <div class="product-info">
                    <h1>
                        @product.Title <br />
                    </h1>
                    <div class="product-info-detail">
                        <span class="product-info-detail-title">Lượt xem:</span>
                        @product.Views
                    </div>
                    <div class="product-info-detail">
                        <span class="product-info-detail-title">Đã bán:</span>
                        @product.CheckoutCount
                    </div>
                    <div class="product-info-detail">
                        <span class="product-info-detail-title">Danh mục: </span>
                        @try
                        {
                            if (product.ProductInCategories.Any())
                            {
                                @product.ProductInCategories.FirstOrDefault().Category.Name
                            }
                        }
                        catch { }
                    </div>
                    <div class="product-info-detail">
                        <span class="product-info-detail-title">
                            Rated:
                            <RatingStar Rating="@reviewAverage"></RatingStar>
                        </span>
                    </div>
                    <div class="product-info-detail">
                        <span class="product-info-detail-title">
                            Số lượt đánh giá:
                            @(reviewCount)
                        </span>
                    </div>
                    
                    <p class="product-description">
                        @product.Description
                    </p>
                    <div class="product-info-price">@product.Price.ToString("n0")<sup>VND</sup></div>

                    <SelectQuantity Model="@cart" CartUpdateType="CartUpdateType.Add" />
                    <SelectSize Model="@cart" CartUpdateType="CartUpdateType.Add" Product_Id="@id" QuantityChanged="StateHasChanged"></SelectSize>
                    <div>
                        <button class="btn-flat btn-hover" @onclick="AddToCart">add to cart</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="box">
            <div class="box-header">
                description
            </div>
            <div class="product-detail-description">
                @*<button class="btn-flat btn-hover btn-view-description" id="view-all-description">
                    view all
                </button>*@
                @*<div class="product-detail-description-content">
                    <p>
                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Impedit laudantium obcaecati odit dolorem, doloremque accusamus esse neque ipsa dignissimos saepe quisquam tempore perferendis deserunt sapiente! Recusandae illum totam earum ratione.
                        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Aliquam incidunt maxime rerum reprehenderit voluptas asperiores ipsam quas consequuntur maiores, at odit obcaecati vero sunt! Reiciendis aperiam perferendis consequuntur odio quas. Lorem ipsum dolor sit amet consectetur adipisicing elit. Ut quaerat eum veniam doloremque nihil repudiandae odio ratione culpa libero tempora. Expedita, quo molestias. Minus illo quis dignissimos aliquid sapiente error!
                    </p>
                </div>*@
            </div>
        </div>
        <ProductReview ProductId="@id" OnReviewAverageCalculated="@OnReviewAverageCalculated"></ProductReview>
        <ProductList Box_Header="Sản phẩm liên quan"></ProductList>
        <Pagination MetaData="MetaData" Spread="2" SelectedPage="SelectedPage" />
    </div>
</div>
@code {
    [Parameter]
    public int id { get; set; }
    private Cart cart;
    private Product product;

    public MetaData MetaData { get; set; } = new MetaData();
    private ProductParameters _productParameters = new ProductParameters();
    private decimal reviewAverage;
    private int reviewCount;
    public EventCallback<ReviewAverageCalculatedEventArgs> OnReviewAverage { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        product = new Product();
        var result = await _productSvc.Get(id);
        if (result.Success)
        {
            product = result.Data;
        }
        cart = new Cart() { Quantity = 1, Product = product};
        await GetProducts();
        await OnReviewAverage.InvokeAsync();
    }

    private async Task SelectedPage(int page)
    {
        _productParameters.PageNumber = page;
        await GetProducts();
    }
    private async Task GetProducts()
    {
        await _productSvc.GetAll(_productParameters, product.ProductInCategories.FirstOrDefault().Category.Url);
        MetaData = _productSvc.Products.MetaData;
    }
    public async Task<int> GetQuantity(int sizeid, int prodid)
    {
        var res = await _httpClient.GetAsync($"/api/product/get-quantity-of-product?sizeId={sizeid}&Prodid={prodid}");
        var result = await res.Content.ReadAsStringAsync();
        return Convert.ToInt32(result.ToString());
    }
    private async void AddToCart()
    {
        var stock = await GetQuantity(cart.SizeId, id);
        if (cart.SizeId <= 0)
        {
            _toastSvc.ShowError("Mời chọn size!");
            StateHasChanged();
            return;
        }
        if (cart.Quantity > stock)
        {
            _toastSvc.ShowError($"Sản phẩm size này chỉ còn {stock} sản phẩm");
            StateHasChanged();
            return;
        }
        //if (product.Stock <= 0)
        //{
        //    _toastSvc.ShowError("Mặt hàng này đã hết. Mời quý khách vui lòng chọn món hàng khác!");
        //    StateHasChanged();
        //}
        if (cart.SizeId > 0 && cart.Quantity <= stock && stock > 0)
        {
            await _cartSvc.AddAsync(cart.ToCartStorage());
            _toastSvc.ShowSuccess($"Thêm thành công {cart.Product.Title} x{cart.Quantity}");
        }
    }
    private void OnReviewAverageCalculated(ReviewAverageCalculatedEventArgs args)
    {
        reviewCount = args.ReviewCount;
        reviewAverage = args.ReviewAverage;
    }
}
