@page "/resetpassword"
@inject NavigationManager navigationManager
@inject IToastService _toastSvc;
@inject IAuthService AuthService;

<PageInfos Title="Đổi mật khẩu mới"></PageInfos>
@if (!IsClickLink)
{
    <div class=" text-center ">
        <br />
        <h3>Đổi mật khẩu mới</h3>
        <br />
        <div>
            Mail chứa link đổi mật khẩu mới đã được gửi, vui lòng kiểm tra email của bạn.
        </div>
        <BackToTop></BackToTop>
    </div>

}
else
{
    <section class="login_area section--padding2">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 offset-lg-3" style="margin-bottom: 30px;">
                    <EditForm id="signinform" Model="resetP" OnValidSubmit="HandleResetPassword">
                        <div class="cardify login">
                            <div class="login--header">
                                <h3>Xin chào</h3>
                                <p>Hãy nhập mật khẩu mới</p>
                            </div>
                            
                            <div class="login--form">
                                <div class="form-group">
                                    <label for="user_name">Mật khẩu mới:</label>
                                    <InputText id="username" name="username" type="password" class="text_field" placeholder="Nhập mật khẩu"
                                               autocomplete="off" required autofocus @bind-Value="resetP.NewPassword"></InputText>
                                    <ValidationMessage For="()=>resetP.NewPassword"></ValidationMessage>
                                </div>
                                <div class="form-group">
                                    <label for="pass">Xác nhận mật khẩu:</label>
                                    <InputText @bind-Value="resetP.ConfirmPassword" id="pass" name="pass" type="password" class="text_field"
                                               placeholder="Nhập mật khẩu mới" required></InputText>
                                    <ValidationMessage For="()=>resetP.ConfirmPassword"></ValidationMessage>
                                </div>
                                <DataAnnotationsValidator />

                                <button class="btn btn--xs" type="submit" disabled=@isLoading>
                                    @if (isLoading)
                                    {
                                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    }
                                    Lưu
                                </button>
                                <br>

                            </div>
                        </div>
                    </EditForm>

                </div>
            </div>

        </div>
    </section>
}

@code {


    bool IsClickLink = false;
    bool isLoading = false;
    ResetPasswordRequest resetP { get; set; } = new ResetPasswordRequest();
    protected override void OnInitialized()
    {

        GetHttpParameters();

    }
    public void GetHttpParameters()
    {
        var uriBuilder = new UriBuilder(navigationManager.Uri);
        var httpQuery = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);

        resetP.Email = httpQuery["email"] ?? "";
        resetP.Token = httpQuery["token"] ?? "";

        if (!string.IsNullOrEmpty(resetP.Email) && !string.IsNullOrEmpty(resetP.Token))
        {
            IsClickLink = true;

        }
    }
    private async Task HandleResetPassword()
    {

        isLoading = true;
        var result = await AuthService.ResetPassword(resetP);

        if (result.Success)
        {

            _toastSvc.ShowSuccess("Reset mật khẩu thành công");
        }
        else
        {

            _toastSvc.ShowError(result.Message);

        }
        isLoading = false;
    }
}
