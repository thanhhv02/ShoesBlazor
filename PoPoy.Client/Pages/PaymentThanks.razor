@page "/payment-thanks"
@inject NavigationManager NavigationManager;
@inject IAuthService AuthService;
@inject ILocalStorageService LocalStorage;

@layout EmptyLayout
<style>
    .card-login-container {
        left: 0px;
        top: 0px;
        position: absolute;
        background: linear-gradient(180deg, #FFFFFF 40.63%, #DEF2FF 100%);
    }

</style>
<div style="height: 100vh; width: 100vw">
    <div class="flex justify-content-center align-items-center h-100 w-100">
        <div class="card">
            <div class="card-body">
                
                <div class="text-center">
                
                   
            
                </div>
            </div>
        </div>
    </div>

</div>
<div>
    <div class="card-login-container row m-0 w-100 h-100 d-flex justify-content-center align-items-center">
       
            <div class="mt-3 card-login_group text-start ">
                <div class="col-12 text-center">
                    <img src="/images/thank.png" />
                </div>
                <div class="main-content">
                    <p class="main-content__body" data-lead-id="main-content-body">Cảm ơn quý khách đã đặt hàng. Chúng tôi sẽ gửi mail sau ít phút !</p>
                </div>
             
                        <AuthorizeView>
                        <Authorized>
                        <a class="btn card-login_button btn-primary  w-100 mt-3 p-2" style="font-size: 18px" href="/user/list-order">Xem lịch sử mua hàng</a>
                        </Authorized>
                    </AuthorizeView>

               
            </div>
    </div>
</div>
@code{
    private string _paymentId;
    private string _payerId;
    private string _VnPayTransactionStatus;

    protected async override void OnAfterRender(bool firstRender)
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var queryStrings = QueryHelpers.ParseQuery(uri.Query);
        var userId = await LocalStorage.GetItemAsync<Guid>("getUserId");

        if (queryStrings.TryGetValue("paymentId", out var paymentId))
        {
            _paymentId = paymentId;
        }
        if (queryStrings.TryGetValue("PayerId", out var payerId))
        {
            _payerId = payerId;
        }
        if (queryStrings.TryGetValue("vnp_TransactionStatus", out var VnPayTransactionStatus))
        {
            _VnPayTransactionStatus = VnPayTransactionStatus;
        }

        // Lấy thông tin trạng thái thanh toán của PayPal
        if (_payerId != null && _paymentId != null)
        {
            await AuthService.PaymentPaypal(_paymentId, _payerId, userId);
        }

        // Lấy thông tin trạng thái thanh toán của VNPay
        if (_VnPayTransactionStatus != null)
        {
            await AuthService.PaymentVnpay(_VnPayTransactionStatus, userId);
        }
    }
}