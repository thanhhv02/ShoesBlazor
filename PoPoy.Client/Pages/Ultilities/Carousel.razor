@inject IJSRuntime JSRuntime
@inject IProductService _productSvc;
@inject NavigationManager uriHelper;
@inject IConfiguration _config;
@using System.Threading;

<div class="hero">
    <div class="slider">
        <div class="container">
            @if (_productSvc.SlideProducts is null || _productSvc.SlideProducts.Count() == 0)
            {
                <LoadingScreen></LoadingScreen>
            }
            else
            {
                foreach (var item in _productSvc.SlideProducts)
                {
                    <div class="slide">
                        <div class="info">
                            <div class="info-content">
                                <h3 class="top-down font-weight-bold">
                                    @item.Title
                                </h3>
                                <p class="top-down trans-delay-0-4 text-wrap">
                                    @((MarkupString)item.Description)
                                </p>
                                <div class="top-down trans-delay-0-6">
                                    <a class="btn-flat btn-hover" href="/product-detail/@item.Id">
                                        <span>Mua ngay</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="img top-down">
                            @if (item.ProductImages.Any())
                            {
                                <img src="@item.ProductImages.FirstOrDefault().ImagePath" alt="">
                            }
                            else
                            {
                                <img src="@_config["BackendApiUrl"]/uploads/no-photo-available.png" alt="">
                            }
                        </div>
                    </div>
                }
            }

        </div>
        <!-- slider controller -->
        <button class="slide-controll slide-next">
            <i class='bx bxs-chevron-right'></i>
        </button>
        <button class="slide-controll slide-prev">
            <i class='bx bxs-chevron-left'></i>
        </button>
        <!-- end slider controller -->
    </div>
</div>

@code {
    private IJSObjectReference MyJsModule { get; set; }
    protected override async Task OnInitializedAsync()
    {
        await GetProduct();
        var timer = new System.Threading.Timer((_) =>
        {
            InvokeAsync(async () =>
            {
                // Add your update logic here
                await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/index.js");
                // Update the UI
                StateHasChanged();
            });
        }, null, 0, 1000);
    }
    public async Task GetProduct()
    {
        await _productSvc.GetProductForSlide();
    }
}
