@using BlazorTemplater
@inject IProductService _productSvc;
@inject IToastService _toastSvc;
@inject ICartService _cartSvc;
@inject IConfiguration _config;
@inject ICartState CartState;
@inject NavigationManager _navigation;
@inject IAuthService AuthService;
@inject ILocalStorageService LocalStorage;
@inject DialogService DialogService;

<div class="bg-main">
    <div class="mid-header container">
        @*<ReloadPage Title="Popoy" Class="logo" Uri="/"></ReloadPage>*@
        <a href="/"><img src="./images/logoTop.png" style="width:180px;height:75px;"/></a>
        <Search></Search>
        <ul class="user-menu">
            <RadzenMediaQuery Query="(max-width: 768px)" Change="@OnChangeMedia">
            </RadzenMediaQuery>
            <AuthorizeView>
                <NotAuthorized>
                    @*<RadzenMediaQuery Query="(max-width: 768px)" Change=@OnChange />*@
            
                    <li class="dropdown">
                        @{
                           var  urlL = $"/login?returnUrl={_navigation.ToBaseRelativePath(_navigation.Uri)}";
                        }
                        <a class="pointer" @onclick="() => _navigation.NavigateTo(urlL,forceLoad)"><i class='bx bx-user-circle'></i></a>
                        <ul class="dropdown-content" style="width:115px">
                               @{
                               var urlR = $"/register";
                            }
                            <li><a class="pointer" @onclick="() => _navigation.NavigateTo(urlR,forceLoad)">Đăng ký</a></li>
                          
                            <li><a @onclick="() => _navigation.NavigateTo(urlL , forceLoad)" class="pointer">Đăng nhập</a></li>
                        </ul>
                    </li>
                </NotAuthorized>
                <Authorized>
                    @{

                    }
                    @*<li class="dropdown">
                    <a href="/user/profile/@context.User.GetUserId()" class="h6">Hello, @context.User.Identity.Name </a>
                    <ul class="dropdown-content" style="width:115px">
                    <li><a href="/user/profile/@context.User.GetUserId()">Thông tin tài khoản</a></li>
                    <li><a href="/logout">Đăng xuất</a></li>
                    </ul>
                    </li>*@
                    <div class="author-author__info inline has_dropdown">
                        <UserAreaNavBar></UserAreaNavBar>
                        <div class="dropdowns dropdown--author" style="background: white;">
                            <ul>
                                <li>
                                    @{
                                       var url1 = $"/user/profile/{context.User.GetUserId()}";
                                    }
                                    <a class="pointer" @onclick="() => _navigation.NavigateTo(url1 , forceLoad)">
                                        <span class="fas fa-user"></span>Hồ sơ
                                    </a>
                                </li>
                                <li>
                                    @{
                                        var url2 = $"/user/list-order";
                                    }
                                    <a class="pointer" @onclick="() => _navigation.NavigateTo(url2 , forceLoad)">
                                        <span class='bx bx-file'></span>Lịch sử
                                    </a>
                                </li>
                                <li>
                                    @{
                                       var url3 = $"/logout";
                                    }
                                    <a class="pointer" @onclick="() => _navigation.NavigateTo(url3 , forceLoad)" href="/logout">
                                        <span class="fas fa-sign-out-alt"></span>Đăng xuất
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>

                </Authorized>
            </AuthorizeView>
     
            <AuthorizeView>
                <li class="has_dropdown">
                    <a style="cursor:pointer" @onclick="OpenChat"><i class='bx bx-message'></i></a>
                    <span class="position-absolute top-0 start-100 translate-middle">
                        <span class="visually-hidden">@*unread messages*@</span>
                    </span>

                    <div class="dropdowns messaging--dropdown" style="background: white;">
                        <div class="dropdown_module_header">
                            <h4>Liên hệ quản trị viên</h4>
                        </div>
                    </div>
                </li>
                <Notify></Notify>
            </AuthorizeView>
           
            <li class="has_dropdown">
                <a href="/cart"><i class='bx bx-cart'></i></a>
                <span class="position-absolute top-0 start-100 translate-middle">
                    @(cartCount)
                    <span class="visually-hidden">@*unread messages*@</span>
                </span>

                <div class="dropdowns messaging--dropdown" id="giohang"  style="background: white;">
                    <div class="dropdown_module_header">
                        <h4>Giỏ hàng</h4>
                        @{
                            var urlC = "/cart";
                        }
                        <a class="pointer" @onclick="() => _navigation.NavigateTo(urlC , forceLoad: forceLoad)">Xem tất cả</a>
                    </div>
                    @if (carts is null)
                    {

                        <LoadingScreen></LoadingScreen>
                    }
                    else if (carts.Count == 0)
                    {
                        <h4 class="m-2">Hiện tại không có sản phẩm nào trong giỏ hàng của bạn.</h4>
                    }
                    else
                    {

                        @foreach (var cart in carts)
                        {
                            <div class="messages">
                                <a href="/@AppExtensions.ConvertToUrlFriendly(cart.Product.Title)/@cart.Product.Id" class="message recent">
                                    <div class="message__actions_avatar">
                                        <div class="avatar">
                                            @try
                                            {
                                                @if (cart.Product.ProductImages.Any())
                                                {
                                                    <img src="@cart.Product.ProductImages.FirstOrDefault().ImagePath" alt="">
                                                }
                                                else
                                                {
                                                    <img src="@_config["BackendApiUrl"]/uploads/no-photo-available.png" alt="">
                                                }



                                            }
                                            catch { }
                                        </div>
                                    </div>
                                    <div class="message_data">
                                        <div class="name_time">
                                            <div class="name">
                                                <p class="text-break text-wrap font-weight-bold">@cart.Product.Title </p>
                                                <p class="text-break text-wrap">Size: @cart.SizeName - Màu: @cart.ColorName</p>
                                            </div>
                                            <span class="time">

                                            </span>
                                            <p>Số lượng: @cart.Quantity</p>
                                        </div>
                                    </div>
                                </a>

                            </div>
                        }
                    }
                </div>
            </li>
        </ul>
    </div>
</div>
@code {
    private int cartCount;
    private List<Cart> carts { get; set; } = new List<Cart>();
    public User user = new User();
    public string AvatarPath { get; set; }
    string html = string.Empty;
    private bool forceLoad = true;
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    protected override async Task OnInitializedAsync()
    {
        cartCount = await GetCartCount();
        CartState.OnQuantityChanged += OnCountChanged;
        carts = await _cartSvc.GetAllAsync();

        await CheckUserAvatarPath();
    }

    public async Task CheckUserAvatarPath()
    {
        var _user = (await AuthStat).User;

        if (_user.Identity?.IsAuthenticated == true)
        {
            var temp = await AuthService.GetUserFromId(_user.GetUserId());
            AvatarPath = temp.Data.AvatarPath;
        }
    }
    private async ValueTask<int> GetCartCount()
    {
        var carts = await _cartSvc.GetAllAsync();
        return carts.Sum(x => x.Quantity);
    }
    private void OnChangeMedia(bool matches)
    {
        forceLoad = matches;
    }

    private async void OnCountChanged(int count)
    {
        cartCount = count;
        carts = await _cartSvc.GetAllAsync();
        await CheckUserAvatarPath();
        StateHasChanged();
    }

  
    public async Task OpenChat()
    {
          await DialogService.OpenAsync<PoPoy.Client.Pages.Chat.Chat>("Hộp thư",options: new DialogOptions() {  Width = "1200px", Height = "712px", Resizable = true, Draggable = true, CssClass = "modal-content", CloseDialogOnOverlayClick = true });

    }
    public void Dispose()
        => CartState.OnQuantityChanged -= OnCountChanged;
}