@inject ICartService CartService
@inject IProductService _prodSvc;
@inject HttpClient _httpClient
@using PoPoy.Client.Services.CartService
@using PoPoy.Shared.Dto
<div class="d-flex flex-row align-items-center mt-3">
    <span>Size&emsp;&emsp;&ensp;</span>
    <EditForm Model="@Model">
        <InputSelect class="form-control" Value="@Model.SizeId" ValueExpression="@(() => Model.SizeId)"
                     ValueChanged="@((int value) => OnSizeChanged(value, Model))"
                     style="width: 130px;">
            @foreach (var num in List_Size)
            {
                <option value="@num.Id">@num.Size</option>
            }
        </InputSelect>
    </EditForm>
</div>
@code {
    [Parameter]
    public Cart Model { get; set; } = new Cart();

    public List<ProductSize> List_Size { get; set; } = new List<ProductSize>();
    [Parameter]
    public EventCallback QuantityChanged { get; set; }
    [Parameter]
    public CartUpdateType CartUpdateType { get; set; }
    [Parameter]
    public int Product_Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        List_Size = await _prodSvc.GetSizeProduct(Product_Id);
        if (Model.SizeId == 0)
        {
            Model.SizeId = (List_Size.Count > 0 || List_Size is not null) ? List_Size.FirstOrDefault().Id : 0;
        }
    }
    private async void OnSizeChanged(int sizeid, Cart cart)
    {
        Model.SizeId = sizeid;
        if (CartUpdateType is CartUpdateType.Update)
        {
            await CartService.UpdateAsync(cart.ToCartStorage());
        }

        await QuantityChanged.InvokeAsync();
    }
    public async Task<int> GetQuantity(int sizeid, int prodid)
    {
        var res = await _httpClient.GetAsync($"/api/product/get-quantity-of-product?sizeId={sizeid}&Prodid={prodid}");
        var result = await res.Content.ReadAsStringAsync();
        return Convert.ToInt32(result.ToString());
    }
}

