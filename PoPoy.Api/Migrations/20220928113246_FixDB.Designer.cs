// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoPoy.Api.Data;

namespace PoPoy.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220928113246_FixDB")]
    partial class FixDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<double>("PayPalPayment")
                        .HasColumnType("float");

                    b.Property<string>("PaymentMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("orderReference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Giày Adidas",
                            SortOrder = 1,
                            Status = 1,
                            Url = "adidas-shoes"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Giày Jordan",
                            SortOrder = 1,
                            Status = 1,
                            Url = "jordan-shoes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Giày Nike",
                            SortOrder = 1,
                            Status = 1,
                            Url = "nike-shoes"
                        });
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.OrderDetails", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 707, DateTimeKind.Local).AddTicks(6238),
                            Description = "ADIDAS ALPHABOOST “CORE BLACK”",
                            OriginalPrice = 2150000m,
                            Price = 2150000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "ADIDAS ALPHABOOST “CORE BLACK”",
                            Views = 0
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5359),
                            Description = "ADIDAS NMD R1 SERIAL PACK METAL GREY",
                            OriginalPrice = 1650000m,
                            Price = 1650000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "ADIDAS NMD R1 SERIAL PACK METAL GREY",
                            Views = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5413),
                            Description = "ADIDAS SEAN WOTHERSPOON X SUPERSTAR ‘SUPER EARTH – BLACK’",
                            OriginalPrice = 3250000m,
                            Price = 3250000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "ADIDAS SEAN WOTHERSPOON X SUPERSTAR ‘SUPER EARTH – BLACK’",
                            Views = 0
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5417),
                            Description = "ADIDAS SUPERSTAR OG ‘VINTAGE WHITE’",
                            OriginalPrice = 1650000m,
                            Price = 1650000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "ADIDAS SUPERSTAR OG ‘VINTAGE WHITE’",
                            Views = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5422),
                            Description = "ADIDAS NMD R1 TOKYO DRAGON",
                            OriginalPrice = 1850000m,
                            Price = 1850000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "ADIDAS NMD R1 TOKYO DRAGON",
                            Views = 0
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5425),
                            Description = "ADIDAS ULTRA BOOST 20 NASA CLOUD WHITE ",
                            OriginalPrice = 2550000m,
                            Price = 2550000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "ADIDAS ULTRA BOOST 20 NASA CLOUD WHITE ",
                            Views = 0
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5428),
                            Description = "AIR JORDAN 1 HIGH ‘BORDEAUX’",
                            OriginalPrice = 6100000m,
                            Price = 6100000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "AIR JORDAN 1 HIGH ‘BORDEAUX’",
                            Views = 0
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5432),
                            Description = "AIR JORDAN 1 HIGH OG “BUBBLE GUM”",
                            OriginalPrice = 6450000m,
                            Price = 6450000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "AIR JORDAN 1 HIGH OG “BUBBLE GUM”",
                            Views = 0
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5436),
                            Description = "AIR JORDAN 1 HIGH RETRO ‘HERITAGE’ GS ",
                            OriginalPrice = 4850000m,
                            Price = 4850000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "AIR JORDAN 1 HIGH RETRO ‘HERITAGE’ GS ",
                            Views = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5440),
                            Description = "AIR JORDAN 1 HIGH ZOOM ‘CANYON RUST’ ",
                            OriginalPrice = 5550000m,
                            Price = 5550000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "AIR JORDAN 1 HIGH ZOOM ‘CANYON RUST’ ",
                            Views = 0
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5443),
                            Description = "AIR JORDAN 1 LOW GS TRIPLE WHITE ",
                            OriginalPrice = 3850000m,
                            Price = 3850000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "AIR JORDAN 1 LOW GS TRIPLE WHITE ",
                            Views = 0
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5446),
                            Description = "AIR JORDAN 1 LOW GS RUSH BLUE BRILL ",
                            OriginalPrice = 4350000m,
                            Price = 4350000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "AIR JORDAN 1 LOW GS RUSH BLUE BRILL ",
                            Views = 0
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5451),
                            Description = "CR7 X AIR MAX 97 GS ‘PORTUGAL PATCHWORK’ ",
                            OriginalPrice = 4300000m,
                            Price = 4300000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "CR7 X AIR MAX 97 GS ‘PORTUGAL PATCHWORK’ ",
                            Views = 0
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5454),
                            Description = "GIÀY NIKE DUNK LOW DISRUPT 2 ‘MALACHITE’ ",
                            OriginalPrice = 4850000m,
                            Price = 4850000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "GIÀY NIKE DUNK LOW DISRUPT 2 ‘MALACHITE’ ",
                            Views = 0
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5457),
                            Description = "NIKE AIR FORCE 1 LOW BY YOU CUSTOM – GUCCI ",
                            OriginalPrice = 3950000m,
                            Price = 3950000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "NIKE AIR FORCE 1 LOW BY YOU CUSTOM – GUCCI ",
                            Views = 0
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 3,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5461),
                            Description = "NIKE AIR FORCE 1 GS LOW WHITE PINK FOAM ",
                            OriginalPrice = 2950000m,
                            Price = 2950000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "NIKE AIR FORCE 1 GS LOW WHITE PINK FOAM ",
                            Views = 0
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5465),
                            Description = "NIKE AIR FORCE 1 GS WHITE UNIVERSITY RED ",
                            OriginalPrice = 2850000m,
                            Price = 2850000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "NIKE AIR FORCE 1 GS WHITE UNIVERSITY RED ",
                            Views = 0
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            DateCreated = new DateTime(2022, 9, 28, 18, 32, 44, 710, DateTimeKind.Local).AddTicks(5468),
                            Description = "NIKE AIR FORCE 1 LOW ’07 ESSENTIAL WHITE METALLIC SILVER BLACK ",
                            OriginalPrice = 3200000m,
                            Price = 3200000m,
                            Quantity = 1000,
                            Stock = 0,
                            Title = "NIKE AIR FORCE 1 LOW ’07 ESSENTIAL WHITE METALLIC SILVER BLACK ",
                            Views = 0
                        });
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductColors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Yellow"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Red"
                        },
                        new
                        {
                            Id = 3,
                            Color = "Green"
                        });
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductInCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 13
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 14
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 15
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 16
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 17
                        });
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductQuantities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            ProductId = 1,
                            SizeId = 1
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 2,
                            ProductId = 1,
                            SizeId = 2
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 3,
                            ProductId = 1,
                            SizeId = 3
                        });
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Size = 38
                        },
                        new
                        {
                            Id = 2,
                            Size = 39
                        },
                        new
                        {
                            Id = 3,
                            Size = 40
                        });
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AvatarPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2cfa3083-c8dc-4178-899a-a1342c90082b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9505aad8-f902-4ec4-8f0c-c35979d442ed",
                            Dob = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hovanthanh12102002@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Van Thanh",
                            LastName = "Ho",
                            LockoutEnabled = false,
                            NormalizedEmail = "hovanthanh12102002@gmail.com",
                            NormalizedUserName = "thanhhv",
                            PasswordHash = "AQAAAAEAACcQAAAAEIfPJ+WSaz/rS/+jGf4yumb5pDavBMvWq+flnEp4ZpmXy9Z+i2rxhsEIeiOGSlItsQ==",
                            PhoneNumber = "032132131",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "05d947b3-afcf-4599-babc-cbed09a1fb42",
                            TwoFactorEnabled = false,
                            UserName = "thanhhv"
                        });
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Cart", b =>
                {
                    b.HasOne("PoPoy.Shared.Dto.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoPoy.Shared.Dto.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoPoy.Shared.Dto.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Order", b =>
                {
                    b.HasOne("PoPoy.Shared.Dto.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoPoy.Shared.Dto.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.OrderDetails", b =>
                {
                    b.HasOne("PoPoy.Shared.Dto.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoPoy.Shared.Dto.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductImage", b =>
                {
                    b.HasOne("PoPoy.Shared.Dto.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductInCategory", b =>
                {
                    b.HasOne("PoPoy.Shared.Dto.Category", "Category")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoPoy.Shared.Dto.Product", "Product")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductQuantity", b =>
                {
                    b.HasOne("PoPoy.Shared.Dto.ProductColor", "Color")
                        .WithMany("ProductQuantities")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoPoy.Shared.Dto.Product", "Product")
                        .WithMany("ProductQuantities")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PoPoy.Shared.Dto.ProductSize", "Size")
                        .WithMany("ProductQuantities")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Category", b =>
                {
                    b.Navigation("ProductInCategories");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductInCategories");

                    b.Navigation("ProductQuantities");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductColor", b =>
                {
                    b.Navigation("ProductQuantities");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.ProductSize", b =>
                {
                    b.Navigation("ProductQuantities");
                });

            modelBuilder.Entity("PoPoy.Shared.Dto.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
