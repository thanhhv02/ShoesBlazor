@page "/listCategory"

@inject IConfiguration Configuration
@inject ICategoryService CategoryService

<h2 class="mt-4 ml-3 mb-3" style="color:darkblue">Danh sách loại hàng</h2>
<div class="input-group" style="left: 950px;">
    <div class="form-outline">
        <input @bind-value="searchText"
               type="search"
               list="users"
               class="form-control"
               placeholder="Search..." />
    </div>
    <button type="button" class="btn btn-primary" @onclick="SearchCategories">
        <i class="fas fa-search"></i>
    </button>
</div>
<td><a href="/createCategory" class="btn btn-primary ml-3"><i class="oi oi-plus"></i></a></td>
<div class="row mt-4 ml-3">
    <table class="table">
        <thead>
            <tr>
                <th>
                    Id
                </th>
                <th>
                    Tên loại
                </th>
                <th>
                    Thứ tự
                </th>
                <th>
                    Url
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var items in Categories)
            {
                <tr>
                    <td>@items.Id</td>
                    <td>@items.Name</td>
                    <td>@items.SortOrder</td>
                    <td>@items.Url</td>
                    <td>
                        <a href="/updateCategory/@items.Id" class="btn btn-warning"><i class="oi oi-cloud-upload"></i></a>
                        <button @onclick="()=> OnDeleteTask(items.Id)" class="btn btn-danger"><i class="oi oi-trash"></i></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<Confirmation ConfirmationMessage="Bạn chắc chắn xóa loại hàng này?"
              ConfirmationTitle="Xóa loại hàng"
              @ref="DeleteConfirmation"
              ConfirmationChanged="OnConfirmDeleteTask">

</Confirmation>

@code {
    private string searchText = string.Empty;
    private List<CateVM> Categories { get; set; } = new List<CateVM>();
    private int CategoryId { get; set; }
    private Confirmation DeleteConfirmation { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetCategories();
    }


    public void OnDeleteTask(int categoryId)
    {
        CategoryId = categoryId;
        DeleteConfirmation.Show();
    }

    public async Task OnConfirmDeleteTask(bool deleteConfirmed)
    {
        if (deleteConfirmed)
        {
            await CategoryService.DeleteCategory(CategoryId);
            await GetCategories();
            StateHasChanged();
        }

    }

    private async Task GetCategories()
    {
        var pagingResponse = await CategoryService.GetAllCategories();
        if (searchText != null)
        {
            Categories = pagingResponse;
        }
    }

    public async Task SearchCategories()
    {
        var pagingResponse = await CategoryService.GetAllCategories();
        if (!String.IsNullOrEmpty(searchText))
        {
            Categories = await CategoryService.SearchCategory(searchText);
        }
        else
        {
            Categories = pagingResponse;
        }
    }
}
