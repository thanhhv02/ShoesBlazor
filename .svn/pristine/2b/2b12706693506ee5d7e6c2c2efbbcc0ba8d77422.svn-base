@inject IProductService _productSvc;
@inject IConfiguration _config;
@implements IDisposable;
<div class="box">
    <div class="row" id="products">
        @if (_productSvc.Products.Items == null || _productSvc.Products.Items.Count == 0)
        {
            <LoadingScreen></LoadingScreen>
        }
        else
        {
            foreach (var item in _productSvc.Products.Items)
            {

                <div class="col-4 col-md-6 col-sm-12">
                    <div class="product-card">
                        <div class="product-card-img">

                            @try
                            {
                                @if (item.ProductImages.Any())
                                {
                                    <img src="@item.ProductImages.FirstOrDefault().ImagePath" alt="">
                                    if(item.ProductImages.Skip(1).FirstOrDefault().ImagePath != null)
                                    {
                                        <img src="@item.ProductImages.Skip(1).FirstOrDefault().ImagePath" alt="">
                                    }
                                    else
                                    {
                                        <img src="@item.ProductImages.FirstOrDefault().ImagePath" alt="">
                                    }

                                }
                                else
                                {
                                    <img src="@_config["BackendApiUrl"]/uploads/no-photo-available.png" alt="">
                                }



                            }
                            catch { }

                        </div>
                        <div class="product-card-info">
                            <div class="product-btn">
                                <a href="/product-detail/@item.Id" class="btn-flat btn-hover btn-shop-now">shop now</a>
                                @*<button class="btn-flat btn-hover btn-cart-add">
                        <i class="bx bxs-cart-add"></i>
                        </button>*@
                                <button class="btn-flat btn-hover btn-cart-add">
                                    <i class="bx bxs-heart"></i>
                                </button>
                            </div>
                            <div class="product-card-name">
                                @item.Title | Lượt xem: @item.Views
                            </div>
                            <div class="product-card-price">
                                <span><del>@item.OriginalPrice</del></span>
                                <span class="curr-price">@item.Price</span>
                            </div>
                        </div>
                    </div>
                </div>

            }

        }
    </div>
</div>


@code {
    protected override void OnInitialized()
    {
        _productSvc.ProductsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        _productSvc.ProductsChanged -= StateHasChanged;
    }

}
