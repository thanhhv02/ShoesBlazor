@page "/updateCategory/{Id}"
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager

<h2 class="mt-4 ml-3 mb-3" style="color:darkblue">Cập nhật loại hàng</h2>
<div class="container ml-3">
    <EditForm Model="Category" OnValidSubmit="UpdateCategory">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="form-group col-lg-4">
            <label for="name">Tên loại hàng</label>
            <InputText id="name" class="form-control" @bind-Value="Category.Name"></InputText>
            <ValidationMessage For="()=> Category.Name"></ValidationMessage>
        </div>
        <div class="form-group col-lg-4">
            <label for="name">Tình trạng</label><br />
            <InputSelect @bind-Value="Category.Status">
                @foreach (var status in Enum.GetValues(typeof(Status)))
                {
                    <option value="@status">@status</option>
                }
            </InputSelect>
        </div>
        <div class="form-group col-lg-4">
            <label for="name">Số thứ tự</label>
            <InputNumber id="name" class="form-control" @bind-Value="Category.SortOrder"></InputNumber>
            <ValidationMessage For="()=> Category.SortOrder"></ValidationMessage>
        </div>
        <div class="form-group col-lg-4">
            <label for="url">Tên Url</label>
            <InputText id="url" class="form-control" @bind-Value="Category.Url"></InputText>
            <ValidationMessage For="()=> Category.Url"></ValidationMessage>
        </div>
        <button type="submit" class="btn btn-primary mt-3">Lưu lại</button>
    </EditForm>
</div>


@code {
    [Parameter]
    public string Id { get; set; }
    public CateVM Category = new CateVM();

    protected async override Task OnInitializedAsync()
    {
        Category = await CategoryService.GetCategoryById(int.Parse(Id));
    }

    private async Task UpdateCategory()
    {
        await CategoryService.UpdateCategory(Category);
        NavigationManager.NavigateTo("/listCategory");
    }

}
