@page "/login"

@inject IToastService _toastSvc;
@inject NavigationManager NavigationManager;
@inject IAuthService AuthService;


<PageInfos Title="Đăng nhập"></PageInfos>
<section class="login_area section--padding2">
    <div class="container">

        <div class="row">
            <div class="col-lg-6 offset-lg-3" style="margin-bottom: 30px;">
                <EditForm id="signinform" Model="LoginModel" OnValidSubmit="HandleLogin">

                    <input name="__RequestVerificationToken" type="hidden" value="qtNhFYfNuzSVf87nf0NBtPVSYKHMiM0JW_aZTe8jNkpIe5WCl573-QVUARLef7Wb08J87lpA-zkL0NT9wNYpaP6GyeHSSYha0-DrQN-u1Vg1" />
                    <div class="cardify login">
                        <div class="login--header">
                            <h3>Xin chào</h3>
                            <p>Đăng nhập vào tài khoản của bạn</p>
                        </div>
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="login--form">
                            <div class="form-group">
                                <label for="user_name">Tên đăng nhập:</label>
                                <InputText id="username" name="username" type="text" class="text_field" placeholder="Nhập user name bạn đã đăng ký"
                                           autocomplete="off" required autofocus @bind-Value="LoginModel.UserName"></InputText>
                                <ValidationMessage For="()=>LoginModel.UserName"></ValidationMessage>
                            </div>
                            <div class="form-group">
                                <label for="pass">Mật khẩu:</label>
                                <InputText @bind-Value="LoginModel.Password" id="pass" name="pass" type="password" class="text_field"
                                           placeholder="Nhập mật khẩu" required></InputText>
                                <ValidationMessage For="()=>LoginModel.Password"></ValidationMessage>
                            </div>
                            @*<div class="form-group">
                                <div class="custom_checkbox">
                                <input type="checkbox" id="ch2" name="rememberme" checked>
                                <label for="ch2">
                                <span class="shadow_checkbox"></span>
                                <span class="label_text">Ghi nhớ đăng nhập</span>
                                </label>
                                </div>
                                </div>*@
                            <button class="btn btn--xs" type="submit" disabled=@isLoading>
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                }
                                Đăng nhập
                            </button>
                            <br>

                            <div class="login_assist">
                                <div class="row">
                                    <div class="col">
                                        <div class="recover">
                                            <p><a href="/forgot-password">Bạn quên mật khẩu ?</a></p>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div class="signup">
                                            <a href="/register">Tạo tài khoản mới</a>
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>
                </EditForm>

            </div>
        </div>

    </div>
</section>

@code {
    private bool ShowErrors;
    private string Error = "";
    private LoginRequest LoginModel = new LoginRequest();
    bool isLoading = false;
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    private async Task HandleLogin()
    {
        var user = (await AuthStat).User;
        if (user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/", true);
        }
        ShowErrors = false;
        isLoading = true;
        var result = await AuthService.Login(LoginModel);

        if (result.Success)
        {

            _toastSvc.ShowSuccess("Đăng nhập thành công");
            await Task.Delay(2000);
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            ShowErrors = true;
            _toastSvc.ShowError(result.Message);
            Error = result.Message;
        }
        isLoading = false;
    }


}