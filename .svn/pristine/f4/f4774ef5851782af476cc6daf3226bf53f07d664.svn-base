@inject IAuthService AuthService
@inject ILocalStorageService LocalStorage

@if(address == null)
{
    <span>Quý khách chưa chỉ định địa chỉ giao hàng!
        <button class="btn" @onclick="InitAddress">Thêm địa chỉ mới?</button>
    </span>
}
else if (!editAddress)
{
    <p>
        <span>@address.Street</span><br />
        <span>@address.City, @address.State</span><br />
        <span>@address.Country</span><br />
    </p>
    <button class="btn btn-primary" @onclick="EditAddress">Sửa</button>
}
else
{
    <EditForm Model="address" OnSubmit="SubmitAddress">
        <div class="mb-3">
            <label for="street">Đường</label>
            <InputText id="street" @bind-Value="address.Street" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="city">Thành phố</label>
            <InputText id="city" @bind-Value="address.City" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="state">Bang</label>
            <InputText id="state" @bind-Value="address.State" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="country">Đất nước</label>
            <InputText id="country" @bind-Value="address.Country" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Lưu</button>
    </EditForm>
}
@code {
    Address address = null;
    bool editAddress = false;

    protected override async Task OnInitializedAsync()
    {
        var userId = await LocalStorage.GetItemAsync<Guid>("getUserId");
        address = await AuthService.GetAddress(userId);
    }

    private async Task SubmitAddress()
    {
        var userId = await LocalStorage.GetItemAsync<Guid>("getUserId");
        editAddress = false;
        address = await AuthService.AddOrUpdateAddress(address, userId);
    }

    private void InitAddress()
    {
        address = new Address();
        editAddress = true;
    }

    private void EditAddress()
    {
        editAddress = true;
    }
}
